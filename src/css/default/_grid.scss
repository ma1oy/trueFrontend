$column-width: 100% / $grid-columns;

@for $i from $grid-columns to 0 {
  .#{$grid-column-name}-#{nth($grid-breakpoints-names, 1)}-#{$i} {
    width: $column-width * $i;
  }

  @if ($i < 12) {
    .#{$grid-offset-name}-#{nth($grid-breakpoints-names, 1)}-#{$i} {
      margin-left: $column-width * $i;
    }
  }
}

//@each $point, $value in $grid-breakpoints {
@for $i from 1 to length($grid-breakpoints-names) {
  @media (min-width: nth($grid-breakpoints-values, $i)) {
    .container {
      max-width: nth($container-widths, $i);
    }
    $point: nth($grid-breakpoints-names, $i + 1);
    @for $i from $grid-columns to 0 {
      .#{$grid-column-name}-#{$point}-#{$i} {
        width: $column-width * $i;
      }

      .#{$grid-offset-name}-#{$point}-#{$i - 1} {
        margin-left: $column-width * ($i - 1);
      }
    }
  }
}

.#{$grid-row-name} {
  margin: 0 (-$grid-columns-margin);
  //background: repeating-linear-gradient(to right, silver 0, silver $column-width, lightgray $column-width, lightgray $column-width * 2);
}

[class*=#{$grid-column-name}-] {
  float: left;
}

.container {
  margin: auto;
  padding: 0 $grid-columns-margin;
}
